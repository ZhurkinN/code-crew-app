plugins {
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "3.7.10"
}

version = "0.1"
group = "cis.tinkoff"

repositories {
    mavenCentral()
}

dependencies {

    //Liquibase
    implementation("io.micronaut.liquibase:micronaut-liquibase")

    //Data utils
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    runtimeOnly("io.micronaut.sql:micronaut-jdbc-hikari")
    runtimeOnly("org.postgresql:postgresql")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("jakarta.persistence:jakarta.persistence-api:3.0.0")

    //Security
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    implementation("io.micronaut.security:micronaut-security-jwt")

    //SWAGGER
    implementation("io.swagger.core.v3:swagger-annotations")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")

    //TEST
    testImplementation("org.mockito:mockito-core")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("io.micronaut.test:micronaut-test-rest-assured")
    testImplementation("org.testcontainers:postgresql")
    testImplementation("org.testcontainers:testcontainers")

    //Lombok
    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")

    //REST utils
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")

    //TMP (from auth guide, will be refactor after testing)
    compileOnly("org.graalvm.nativeimage:svm")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client")

    //Metrics
    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-statsd")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus")

    //Logging
    runtimeOnly("ch.qos.logback:logback-classic")

    //MinIO
    implementation("io.minio:minio:8.4.3")

}

application {
    mainClass.set("cis.tinkoff.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("cis.tinkoff.*")
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'cis.tinkoff.Application'
        )
    }
}
